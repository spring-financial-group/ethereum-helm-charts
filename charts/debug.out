NAME: geth-node
LAST DEPLOYED: Thu Apr  3 11:18:39 2025
NAMESPACE: jx-staging
STATUS: pending-install
REVISION: 1
USER-SUPPLIED VALUES:
{}

COMPUTED VALUES:
PVCConfigs:
  genesis:
    enabled: false
    pvcName: genesis-data-pvc
    storageClassName: azurefile
affinity: {}
annotations: {}
authPort: 8551
config: |
  [Node.P2P]
  DialRatio = 3
containerSecurityContext: {}
customCommand: []
defaultCommandTemplate: |
  - sh
  - -ac
  - >
  {{- if .Values.p2pNodePort.enabled }}
    . /env/init-nodeport;
  {{- end }}
    exec geth
    --datadir=/data/geth/$HOSTNAME
    --authrpc.jwtsecret=/data/jwt.hex
    --http
    --http.addr=0.0.0.0
    --http.api=admin,debug,engine,eth,miner,net,rpc,txpool,web3
    --http.corsdomain=*
    --http.port=8545
    --http.vhosts=*
    --ws
    --ws.api=admin,debug,engine,eth,miner,net,rpc,txpool,web3
    --ws.addr=0.0.0.0
    --ws.port=8546
    --ws.origins=*
    --authrpc.vhosts=*
    --authrpc.addr=0.0.0.0
    --authrpc.port=8551
    --allow-insecure-unlock
    --unlock=0x123463a4b065722e99115d6c222f267d9cabb524
    --password=/data/geth/geth_password.txt
    --nodiscover
    --syncmode=full
    --metrics
    --metrics.addr=geth
    --metrics.port=6060
    --metrics.expensive
  {{- range .Values.extraArgs }}
    {{ tpl . $ }}
  {{- end }}
extraArgs:
- --networkid=999999
- --verbosity=3
- --ipcpath=/tmp/geth.ipc
extraContainerPorts: []
extraContainers:
- command:
  - /bin/sh
  - -c
  - while true; do sleep 30; done
  image: jx3mqubebuild.azurecr.io/mqube-geth:v0.0.13
  name: debug-node
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
extraEnv: []
extraPorts: []
extraVolumeMounts: []
extraVolumes: []
fullnameOverride: ""
gethconfig:
  enabled: true
httpPort: 8545
image:
  pullPolicy: IfNotPresent
  repository: docker.io/ethereum/client-go
  tag: v1.14.11
imagePullSecrets: []
ingress:
  annotations: {}
  enabled: false
  hosts:
  - host: chart-example.local
    paths: []
  tls: []
initChownData:
  command:
  - sh
  - -c
  - |
    cp /config/init-script.sh /tmp/init-script.sh
    chmod +x /tmp/init-script.sh
    /tmp/init-script.sh
  enabled: true
  freshInit: true
  image:
    pullPolicy: IfNotPresent
    repository: jx3mqubebuild.azurecr.io/mqube-geth
    tag: 0.0.9
  resources: {}
initContainers: []
jwt: ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a
livenessProbe:
  initialDelaySeconds: 60
  periodSeconds: 120
  tcpSocket:
    port: http-rpc
metricsPort: 6060
nameOverride: ""
nodeSelector: {}
p2pNodePort:
  enabled: false
  initContainer:
    image:
      pullPolicy: IfNotPresent
      repository: lachlanevenson/k8s-kubectl
      tag: v1.25.4
  port: 31000
  portForwardContainer:
    image:
      pullPolicy: IfNotPresent
      repository: alpine/socat
      tag: latest
p2pPort: 30303
p2pUdpPort: 30303
persistence:
  accessModes:
  - ReadWriteMany
  annotations: {}
  enabled: true
  existingClaim: null
  selector: {}
  size: 20Gi
  storageClassName: azurefile
podAnnotations: {}
podDisruptionBudget: {}
podLabels: {}
podManagementPolicy: OrderedReady
priorityClassName: null
rbac:
  clusterRules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  create: true
  rules:
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - get
    - list
    - watch
readinessProbe:
  initialDelaySeconds: 10
  periodSeconds: 10
  tcpSocket:
    port: http-rpc
replicas: 1
resources: {}
secretEnv: {}
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001
serviceAccount:
  annotations: {}
  create: true
  name: ""
serviceMonitor:
  annotations: {}
  enabled: false
  interval: 1m
  labels: {}
  namespace: null
  path: /debug/metrics/prometheus
  relabelings: []
  scheme: http
  scrapeTimeout: 30s
  tlsConfig: {}
terminationGracePeriodSeconds: 300
tolerations: []
topologySpreadConstraints: []
updateStrategy:
  type: RollingUpdate
wsPort: 8546

HOOKS:
---
# Source: geth/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "geth-node-test-connection"
  labels:
    helm.sh/chart: geth-1.0.8
    app.kubernetes.io/name: geth
    app.kubernetes.io/instance: geth-node
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
        - --location
        - --request
        - POST
        - 'geth-node:8545/'
        - --header
        - 'Content-Type: application/json'
        - --data-raw
        - '{"jsonrpc":"2.0","method":"web3_clientVersion","params":[],"id":67}'
  restartPolicy: Never
MANIFEST:
---
# Source: geth/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: geth-node
  labels:
    helm.sh/chart: geth-1.0.8
    app.kubernetes.io/name: geth
    app.kubernetes.io/instance: geth-node
    app.kubernetes.io/managed-by: Helm
  namespace: jx-staging
---
# Source: geth/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: geth-node-env
  labels:
    helm.sh/chart: geth-1.0.8
    app.kubernetes.io/name: geth
    app.kubernetes.io/instance: geth-node
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: geth/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: geth-node-jwt
type: Opaque
data:
  jwt.hex: ZWNiMjJiYzI0ZTdkNDA2MWY3ZWQ2OTBjY2Q1ODQ2ZDdkNzNmNWQyYjk3MzMyNjdlMTJmNTY3OTAzOThkOTA4YQ==
---
# Source: geth/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: geth-node
data:
  geth.toml: |
    [Node.P2P]
    DialRatio = 3
    
  config.yml: |
    CONFIG_NAME: interop
    PRESET_BASE: interop
    
    # Genesis
    GENESIS_FORK_VERSION: 0x20000089
    
    # Altair
    ALTAIR_FORK_EPOCH: 0
    ALTAIR_FORK_VERSION: 0x20000090
    
    # Merge
    BELLATRIX_FORK_EPOCH: 0
    BELLATRIX_FORK_VERSION: 0x20000091
    TERMINAL_TOTAL_DIFFICULTY: 0
    
    # Capella
    CAPELLA_FORK_EPOCH: 0
    CAPELLA_FORK_VERSION: 0x20000092
    MAX_WITHDRAWALS_PER_PAYLOAD: 16
    
    # DENEB
    DENEB_FORK_EPOCH: 0
    DENEB_FORK_VERSION: 0x20000093
    
    # Electra
    # ELECTRA_FORK_EPOCH: 0
    ELECTRA_FORK_VERSION: 0x15000000
    
    # Time parameters
    SECONDS_PER_SLOT: 12
    SLOTS_PER_EPOCH: 6
    
    # Deposit contract
    DEPOSIT_CONTRACT_ADDRESS: 0x4242424242424242424242424242424242424242
  genesis.json: |
    {
    	"config": {
    		"chainId": 32382,
    		"homesteadBlock": 0,
    		"daoForkSupport": true,
    		"eip150Block": 0,
    		"eip155Block": 0,
    		"eip158Block": 0,
    		"byzantiumBlock": 0,
    		"constantinopleBlock": 0,
    		"petersburgBlock": 0,
    		"istanbulBlock": 0,
    		"muirGlacierBlock": 0,
    		"berlinBlock": 0,
    		"londonBlock": 0,
    		"arrowGlacierBlock": 0,
    		"grayGlacierBlock": 0,
    		"shanghaiTime": 1742892705,
    		"cancunTime": 1742892705,
    		"terminalTotalDifficulty": 0,
    		"terminalTotalDifficultyPassed": true
    	},
    	"nonce": "0x0",
    	"timestamp": "0x67e26ea1",
    	"extraData": "0x0000000000000000000000000000000000000000000000000000000000000000123463a4b065722e99115d6c222f267d9cabb5240000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    	"gasLimit": "0x1c9c380",
    	"difficulty": "0x1",
    	"mixHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
    	"coinbase": "0x0000000000000000000000000000000000000000",
    	"alloc": {
    		"123463a4b065722e99115d6c222f267d9cabb524": {
    			"balance": "0x2863c1f5cdae42f9540000000"
    		},
    		"14dc79964da2c08b23698b3d3cc7ca32193d9955": {
    			"balance": "0x21e19e0c9bab2400000"
    		},
    		"15d34aaf54267db7d7c367839aaf71a00a2c6a65": {
    			"balance": "0x21e19e0c9bab2400000"
    		},
    		"1cbd3b2770909d4e10f157cabc84c7264073c9ec": {
    			"balance": "0x21e19e0c9bab2400000"
    		},
    		"23618e81e3f5cdf7f54c3d65f7fbc0abf5b21e8f": {
    			"balance": "0x21e19e0c9bab2400000"
    		},
    		"2546bcd3c84621e976d8185a91a922ae77ecec30": {
    			"balance": "0x21e19e0c9bab2400000"
    		},
    		"3c44cdddb6a900fa2b585dd299e03d12fa4293bc": {
    			"balance": "0x21e19e0c9bab2400000"
    		},
    		"4242424242424242424242424242424242424242": {
    			"code": "",
    			"balance": "0x0"
    		},
    		"4e59b44847b379578588920ca78fbf26c0b4956c": {
    			"code": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe03601600081602082378035828234f58015156039578182fd5b8082525050506014600cf3",
    			"balance": "0x0"
    		},
    		"5678e9e827b3be0e3d4b910126a64a697a148267": {
    			"balance": "0x43c33c1937564800000"
    		},
    		"70997970c51812dc3a010c7d01b50e0d17dc79c8": {
    			"balance": "0x21e19e0c9bab2400000"
    		},
    		"71be63f3384f5fb98995898a86b02fb2426c5788": {
    			"balance": "0x21e19e0c9bab2400000"
    		},
    		"8626f6940e2eb28930efb4cef49b2d1f2c9c1199": {
    			"balance": "0x21e19e0c9bab2400000"
    		},
    		"90f79bf6eb2c4f870365e785982e1f101e93b906": {
    			"balance": "0x21e19e0c9bab2400000"
    		},
    		"976ea74026e726554db657fa54763abd0c3a0aa9": {
    			"balance": "0x21e19e0c9bab2400000"
    		},
    		"9965507d1a55bcc2695c58ba16fb37d819b0a4dc": {
    			"balance": "0x21e19e0c9bab2400000"
    		},
    		"a0ee7a142d267c1f36714e4a8f75612f20a79720": {
    			"balance": "0x21e19e0c9bab2400000"
    		},
    		"bcd4042de499d14e55001ccbb24a551f3b954096": {
    			"balance": "0x21e19e0c9bab2400000"
    		},
    		"bda5747bfd65f08deb54cb465eb87d40e51b197e": {
    			"balance": "0x21e19e0c9bab2400000"
    		},
    		"cd3b766ccdd6ae721141f452c550ca635964ce71": {
    			"balance": "0x21e19e0c9bab2400000"
    		},
    		"dd2fd4581271e230360230f9337d5c0430bf44c0": {
    			"balance": "0x21e19e0c9bab2400000"
    		},
    		"df3e18d64bc6a983f673ab319ccae4f1a57c7097": {
    			"balance": "0x21e19e0c9bab2400000"
    		},
    		"f39fd6e51aad88f6f4ce6ab8827279cfffb92266": {
    			"balance": "0x21e19e0c9bab2400000"
    		},
    		"fabb0ac9d68b0b445fb7357272ff202c5651694a": {
    			"balance": "0x21e19e0c9bab2400000"
    		}
    	},
    	"number": "0x0",
    	"gasUsed": "0x0",
    	"parentHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
    	"baseFeePerGas": null,
    	"excessBlobGas": null,
    	"blobGasUsed": null
    }
  geth_password.txt: |
    
  init-script.sh: |
    #!/bin/sh
    
    echo "running script init-config"
    
    echo "HOSTNAME: $HOSTNAME"
    echo "Fresh init requested. Removing existing data directories and StateFiles"
    rm -rf /data/geth/$HOSTNAME
    echo "Removed /data/geth/$HOSTNAME"
    rm -rf /data/stateFiles
    echo "Removed /data/stateFiles"
    
    rm -rf /data/stateFiles
    mkdir -p /data/stateFiles
    
    cp /config/geth_password.txt /data/geth/.
    mkdir -p /data/geth/$HOSTNAME/keystore
    
    ls -lrt /data/geth/$HOSTNAME/keystore
    
    cp /config/UTC* /data/geth/$HOSTNAME/keystore/.
    cat /data/geth/$HOSTNAME/keystore/UTC*
    
    # Create the genesis state only if it doesn't already exist
    #if [ ! -f /data/stateFiles/genesis.ssz ]; then
      echo "Genesis state files not found. Creating..."
    
      # Run prysmctl to generate the genesis state
      /usr/local/bin/prysmctl testnet \
          generate-genesis \
          --fork=deneb \
          --num-validators=64 \
          --output-ssz=/data/stateFiles/genesis.ssz \
          --chain-config-file=/config/config.yml \
          --geth-genesis-json-in=/config/genesis.json \
          --geth-genesis-json-out=/data/stateFiles/genesis.json
    
      echo "Genesis state files created successfully."
      # "If you have to manually edit the genesis file after creation , this can happen when trying new forks see previous commits on installing jq and doing this"
      echo "Initializing Geth with the updated genesis..."
      geth init --datadir /data/geth/$HOSTNAME /data/stateFiles/genesis.json
    
      echo "Geth initialized successfully with Deneb active."
    
    #else
    #  echo "Genesis state files already exist. Skipping creation."
    #fi
    
    
  init-script-bootnode.sh: |
    #!/bin/sh
    
    # Step 1: Define the URL for the bootnode binary
    echo "Downloading bootnode binary..."
    BOOTNODE_URL="https://gethstore.blob.core.windows.net/builds/geth-alltools-linux-amd64-1.14.12-293a300d.tar.gz"
    
    NODEKEY_PATH="/data/network/$HOSTNAME/nodekey"
    ENODE_URL_PATH="/data/network/$HOSTNAME/enode.url"
    
    rm -rf /data/scripts/$HOSTNAME
    mkdir -p /data/scripts/$HOSTNAME
    
    echo "HOSTNAME: $HOSTNAME"
    
    rm -rf /data/network/$HOSTNAME
    echo "Removed /data/network/$HOSTNAME"
    mkdir -p /data/network/$HOSTNAME
    echo "Created /data/network/$HOSTNAME"
    mkdir -p /data/stateFiles
    echo "Created /data/stateFiles"
    
    ls -lrt /data
    
    # Step 2: Download the bootnode binary
    curl -L $BOOTNODE_URL -o /tmp/geth-tools.tar.gz
    
    # Step 3: Extract the bootnode binary
    echo "Extracting bootnode binary..."
    tar -xvzf /tmp/geth-tools.tar.gz -C /tmp
    
    ls -lrt /tmp
    
    chmod +x /tmp/geth-alltools-linux-amd64-1.14.12-293a300d/bootnode
    ls -lrt /tmp/geth-alltools-linux-amd64-1.14.12-293a300d/bootnode
    
    # Step 5: Generate the nodekey if it doesn't exist
    
    if [ ! -f "$NODEKEY_PATH" ]; then
      echo "Generating new nodekey..."
      /tmp/geth-alltools-linux-amd64-1.14.12-293a300d/bootnode -genkey "$NODEKEY_PATH"
      echo "New nodekey generated at $NODEKEY_PATH."
      ls -lrt $NODEKEY_PATH
    fi
    
    cp /tmp/geth-alltools-linux-amd64-1.14.12-293a300d/bootnode /data/scripts/$HOSTNAME/bootnode
    chmod +x /data/scripts/$HOSTNAME/bootnode
    
    ls -lrt /data/scripts/$HOSTNAME/bootnode
    
    echo "Starting bootnode on port 30303..."
    
    # Check if prysmctl is executable
    ls -lrt /usr/local/bin/prysmctl
    
    echo "Creating the genesis state using the provided genesis.json and config.yml..."
    
    GENESIS_TIME=${GENESIS_TIME:-1736642736}
    
    # Run prysmctl to generate the genesis state
    /usr/local/bin/prysmctl testnet generate-genesis \
      --num-validators=1 \
      --chain-config-file=/config/config.yml \
      --geth-genesis-json-in=/config/genesis.json \
      --output-ssz=/data/stateFiles/genesis.ssz \
      --geth-genesis-json-out=/data/stateFiles/genesis-out.json \
      --genesis-time="$GENESIS_TIME"
    
    geth init --datadir "/data/network/${HOSTNAME}" /data/stateFiles/genesis-out.json
    
    # Get the pod's IP
    POD_IP=$(hostname -i)
    
    geth --datadir "/data/network/${HOSTNAME}" \
      --nodekey "${NODEKEY_PATH}" \
      --networkid 999999 \
      --nat "extip:${POD_IP}" \
      --port 30303 \
      --verbosity 3 \
      --ipcpath /tmp/geth.ipc \
      --http \
      --http.addr=0.0.0.0 \
      --http.port=8545 \
      --http.vhosts=* \
      --http.corsdomain=* \
    
  UTC--2022-08-19T17-38-31.257380510Z--123463a4b065722e99115d6c222f267d9cabb524: |
    {"address":"123463a4b065722e99115d6c222f267d9cabb524","crypto":{"cipher":"aes-128-ctr","ciphertext":"93b90389b855889b9f91c89fd15b9bd2ae95b06fe8e2314009fc88859fc6fde9","cipherparams":{"iv":"9dc2eff7967505f0e6a40264d1511742"},"kdf":"scrypt","kdfparams":{"dklen":32,"n":262144,"p":1,"r":8,"salt":"c07503bb1b66083c37527cd8f06f8c7c1443d4c724767f625743bd47ae6179a4"},"mac":"6d359be5d6c432d5bbb859484009a4bf1bd71b76e89420c380bd0593ce25a817"},"id":"622df904-0bb1-4236-b254-f1b8dfdff1ec","version":3}
---
# Source: geth/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jx-staging-geth-node
  labels:
    helm.sh/chart: geth-1.0.8
    app.kubernetes.io/name: geth
    app.kubernetes.io/instance: geth-node
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
---
# Source: geth/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jx-staging-geth-node
  labels:
    helm.sh/chart: geth-1.0.8
    app.kubernetes.io/name: geth
    app.kubernetes.io/instance: geth-node
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jx-staging-geth-node
subjects:
  - kind: ServiceAccount
    name: geth-node
    namespace: jx-staging
---
# Source: geth/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: geth-node
  labels:
    helm.sh/chart: geth-1.0.8
    app.kubernetes.io/name: geth
    app.kubernetes.io/instance: geth-node
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
---
# Source: geth/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: geth-node
  labels:
    helm.sh/chart: geth-1.0.8
    app.kubernetes.io/name: geth
    app.kubernetes.io/instance: geth-node
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: geth-node
subjects:
  - kind: ServiceAccount
    name: geth-node
---
# Source: geth/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: geth-node-headless
  labels:
    helm.sh/chart: geth-1.0.8
    app.kubernetes.io/name: geth
    app.kubernetes.io/instance: geth-node
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  ports:
    - port: 30303
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: 30303
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
    - port: 8545
      targetPort: http-rpc
      protocol: TCP
      name: http-rpc  
    - port: 8546
      targetPort: ws-rpc
      protocol: TCP
      name: ws-rpc
    - port: 8551
      targetPort: auth-rpc
      protocol: TCP
      name: auth-rpc
    - port: 6060
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: geth
    app.kubernetes.io/instance: geth-node
---
# Source: geth/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: geth-node
  labels:
    helm.sh/chart: geth-1.0.8
    app.kubernetes.io/name: geth
    app.kubernetes.io/instance: geth-node
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 30303
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: 30303
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
    - port: 8545
      targetPort: http-rpc
      protocol: TCP
      name: http-rpc  
    - port: 8546
      targetPort: ws-rpc
      protocol: TCP
      name: ws-rpc
    - port: 8551
      targetPort: auth-rpc
      protocol: TCP
      name: auth-rpc
    - port: 6060
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: geth
    app.kubernetes.io/instance: geth-node
---
# Source: geth/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: geth-node
  labels:
    helm.sh/chart: geth-1.0.8
    app.kubernetes.io/name: geth
    app.kubernetes.io/instance: geth-node
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: geth
      app.kubernetes.io/instance: geth-node
  serviceName: geth-node-headless
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: geth
        app.kubernetes.io/instance: geth-node
      annotations:
        checksum/config: 7d8054bd124e133065eda995921a6077bcb6228110b6a0a4db9797539025604b
        checksum/secrets: 68b694d9e785dad7830aa22bd5c65a94d8c6e5adc7e3c04c1f5ccad7c1247dda
    spec:
      serviceAccountName: geth-node
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      initContainers:
        - name: init-chown-data
          image: "jx3mqubebuild.azurecr.io/mqube-geth:0.0.13"
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          command: 
            - sh
            - -c
            - |
              cp /config/init-script.sh /tmp/init-script.sh
              chmod +x /tmp/init-script.sh
              /tmp/init-script.sh
          resources:
      
            {}
          volumeMounts:
            - name: storage
              mountPath: "/data"
            - name: config
              mountPath: "/config"
      containers:
        - name: geth
          image: "docker.io/ethereum/client-go:v1.14.11"
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -ac
            - >
              exec geth
              --datadir=/data/geth/$HOSTNAME
              --authrpc.jwtsecret=/data/jwt.hex
              --http
              --http.addr=0.0.0.0
              --http.api=admin,debug,engine,eth,miner,net,rpc,txpool,web3
              --http.corsdomain=*
              --http.port=8545
              --http.vhosts=*
              --ws
              --ws.api=admin,debug,engine,eth,miner,net,rpc,txpool,web3
              --ws.addr=0.0.0.0
              --ws.port=8546
              --ws.origins=*
              --authrpc.vhosts=*
              --authrpc.addr=0.0.0.0
              --authrpc.port=8551
              --allow-insecure-unlock
              --unlock=0x123463a4b065722e99115d6c222f267d9cabb524
              --password=/data/geth/geth_password.txt
              --nodiscover
              --syncmode=full
              --metrics
              --metrics.addr=geth
              --metrics.port=6060
              --metrics.expensive
              --networkid=999999
              --verbosity=3
              --ipcpath=/tmp/geth.ipc
            
          securityContext:
            {}
          volumeMounts:
            - name: storage
              mountPath: "/data"
            - name: jwt
              mountPath: "/data/jwt.hex"
              subPath: jwt.hex
              readOnly: true
            - name: config
              mountPath: "/config"
              readOnly: true
          ports:
            - name: p2p-tcp
              containerPort: 30303
              protocol: TCP
            - name: p2p-udp
              containerPort: 30303
              protocol: UDP
            - name: http-rpc
              containerPort: 8545
              protocol: TCP
            - name: ws-rpc
              containerPort: 8546
              protocol: TCP
            - name: auth-rpc
              containerPort: 8551
              protocol: TCP
            - name: metrics
              containerPort: 6060
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 60
            periodSeconds: 120
            tcpSocket:
              port: http-rpc
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            tcpSocket:
              port: http-rpc
          resources:
            {}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
        
        - command:
          - /bin/sh
          - -c
          - while true; do sleep 30; done
          image: jx3mqubebuild.azurecr.io/mqube-geth:v0.0.13
          name: debug-node
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        []
      topologySpreadConstraints:
        []
      terminationGracePeriodSeconds: 300
      volumes:
        - name: jwt
          secret:
            secretName: geth-node-jwt
        - name: config
          configMap:
            name: geth-node
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        {}
    spec:
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: "20Gi"
      storageClassName: azurefile

